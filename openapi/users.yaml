openapi: '3.0.2'
info:
  title: User Service
  version: '1.0'
  description: Provides a set of API operations that can be performed on a user like updating and retrieving a user profile, viewing user tickets etc.
  license:
    name: Proximety
    url: www.proximety.io
servers:
  - url: https://dev.proximety.io/api
  - url: https://staging.proximety.io/api
  - url: https://www.proximety.io/api
tags:
- name: Auth
# - name: User
# - name: Issue Ticket
paths:
  /users/auth/otp-generator:
    post: 
      tags:
        - Auth
      summary: Generates a new OTP for the specified mobile number which can then be used to login to the platform.
      operationId: generateOTP
      requestBody:
        description: The details of the device to which OTP needs to be sent. 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTPGenerationRequest'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTPGenerationResponse'
        "400":
          description: Bad request          
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalException"
              example: 
                {
                  "status": 401,
                  "type": "BAD_REQUEST",
                  "title": "Invalid mobile number.",
                  "detail": "The mobile number you have specified is invalid. Please provid a valid number and try again.",
                }
  /users/auth/otp-login:
    post: 
      tags:
        - Auth
      summary: Enables logging into the system by providing a recieved valid OTP.
      operationId: loginWithOTP
      requestBody:
        description: The details of the OTP recieved by the user. 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTPLoginRequest'
        required: true
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalException"
              example: 
                {
                  "status": 400,
                  "type": "BAD_REQUEST",
                  "title": "OTP invalid",
                  "detail": "The OTP you have entered for the specified mobile number is invalid. Please specify a valid OTP and try again.",
                }
  /users/auth/refresh:
    post: 
      tags:
      - Auth
      summary: Generates a new authentication token based on the provided refresh token.
      operationId: refreshToken
      requestBody:
        description: The details of the refresh token to be used to generate a new authentication token. 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalException"
              example: 
                {
                  "status": 400,
                  "type": "BAD_REQUEST",
                  "title": "Bad request",
                  "detail": "Please specify a valid refresh token and try again.",
                }
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalException"
              example: 
                {
                  "status": 403,
                  "type": "FORBIDDEN",
                  "title": "Refresh token expired",
                  "detail": "The refresh token you have specified has expired. Please login and try again.",
                  "tags":["REFRESH_TOKEN_EXPIRED"]
                }
  /users/auth/google-login:
    post: 
      tags:
        - Auth
      summary: Enables logging into the system by providing the id token recieved from google sign in.
      operationId: signInWithGoogle
      requestBody:
        description: The request object indicating the details recieved from google sign in.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLoginRequest'
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalException"
              example: 
                {
                  "status": 400,
                  "type": "BAD_REQUEST",
                  "title": "Google ID token not specified.",
                  "detail": "Please specify a valid google ID token and try again."
                }
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalException"
              example: 
                {
                  "status": 403,
                  "type": "FORBIDDEN",
                  "title": "Google ID token expired",
                  "detail": "The google ID token you have specified has expired. Please login and try again.",
                  "tags":["GOOGLE_TOKEN_EXPIRED"]
                }
  /users/auth/facebook-login:
    post: 
      tags:
        - Auth
      summary: Enables logging into the system by providing the user access token recieved from facebook sign in.
      operationId: signInWithFacebook
      requestBody:
        description: The request object indicating the details recieved from facebook sign in.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookLoginRequest'
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalException"
              example: 
                {
                  "status": 400,
                  "type": "BAD_REQUEST",
                  "title": "Facebook user access token not specified.",
                  "detail": "Please specify a valid facebook user access token and try again."
                }
        "401":
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalException"
              example: 
                {
                  "status": 403,
                  "type": "FORBIDDEN",
                  "title": "Google ID token expired",
                  "detail": "The google ID token you have specified has expired. Please login and try again.",
                  "tags":["FACEBOOK_TOKEN_EXPIRED"]
                }
  # /users:
    # post:
    #   tags:
    #     - User
    #   summary: Add a new user to the platform.
    #   operationId: createUser
    #   requestBody:
    #     description: Details of the user that needs to be added to the platform.
    #     content:
    #       application/json:
    #         schema:
    #           $ref: '#/components/schemas/User'
    #     required: true
    #   responses:
    #     "203":
    #       description: Created
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/User'
    #     "400":
    #       description: Bad request
    #     "401":
    #       description: Unauthorized access
  /users/{userHandle}:
    get:
      tags:
        - User
      summary: Retreive the details about an existing user.
      operationId: getUser     
      parameters:
        - name: Authorization
          in: header
          description: The authentication bearer token.
          required: true
          example: Bearer asd.js2jd9a.gC6paXtNOg0OZL4-adsd-asd
          schema:
            type: string
        - name: userId
          in: path
          description: The internal system identifier for the user.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/User'
        400:
          description: Bad request
        404: 
          description: User not found
        401:
          description: Unauthorized access
    put:
      tags:
        - User
      summary: Update the profile details for the specified user.
      operationId: updateUser
      parameters:
        - name: Authorization
          in: header
          description: The authentication bearer token.
          required: true
          example: Bearer asd.js2jd9a.gC6paXtNOg0OZL4-adsd-asd
          schema:
            type: string
        - name: userHandle
          in: path
          description: The internal system handle for the user.
          required: true
          schema:
            type: string
      requestBody:
        description: Details of the user that needs to be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:  {
                        "name": {
                          "fullName": "Jake M Sully",
                          "firstName": "Jake",
                          "middleName": "M",
                          "lastName": "Sully"
                        },
                        "contactInfo": {
                          "primaryEmail": "abc@xyz.com"
                        },
                        "dateOfBirth": "1995-05-17",
                        "gender": "MALE",

                      }
                
        "400":
          description: Bad request
        "401":
          description: Unauthorized access
  /users/{userHandle}/profile-picture:
    put:
      tags:
        - User
      summary: Update the profile picture for the specified user.
      operationId: updateProfilePicture
      parameters:
        - name: Authorization
          in: header
          description: The authentication bearer token.
          required: true
          example: Bearer asd.js2jd9a.gC6paXtNOg0OZL4-adsd-asd
          schema:
            type: string
        - name: userHandle
          in: path
          description: The internal system handle of the user whose profile picture needs to be updated.
          required: true
          schema:
            type: string
      requestBody:
        description: The request body for updating the phone number that contains the phone number along with a verification OTP code.
        required: true
        content:
          image/png:
            schema:
              type: string
              format: binary
          image/jpg:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  imageUrl:
                    type: string
                    example: https://picsum.photos/id/237/200/300.jpg
        "400":
          description: Bad request
        "401":
          description: Unauthorized access
  /users/{userHandle}/phone-number:
    put:
      tags:
        - User
      summary: Update the profile details for the specified user.
      operationId: updatePhoneNumber
      parameters:
        - name: Authorization
          in: header
          description: The authentication bearer token.
          required: true
          example: Bearer asd.js2jd9a.gC6paXtNOg0OZL4-adsd-asd
          schema:
            type: string
        - name: userHandle
          in: path
          description: The internal system handle of the user whose phone number needs to be updated.
          required: true
          schema:
            type: string
      requestBody:
        description: The request body for updating the phone number that contains the phone number along with a verification OTP code.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneNumberUpdateRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumberUpdateResponse'
        "400":
          description: Bad request
        "401":
          description: Unauthorized access
  # /users/{userId}/issue-tickets:
  #   get:
  #     tags:
  #       - Issue Ticket
  #     summary: Retreives the list of issue tickets raised by the specified user.
  #     operationId: getTicketsForUser     
  #     parameters:
  #       - name: userId
  #         in: path
  #         description: The internal system identifier for the user whose issue tickets are to be retrieved.
  #         required: true
  #         schema:
  #           type: string
  #       - name: status
  #         in: query
  #         description: A comma separated list of issue statuses. Only issues having a status specifiedin the list will be retrieved.
  #         required: true
  #         example: OPEN, ASSIGNED
  #         schema:
  #           type: string
  #           enum:
  #             - OPEN
  #             - ASSIGNED
  #             - CLOSED
  #     responses:
  #       200:
  #         description: Successful operation
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/IssueTicket'       
  #   post:
  #     tags:
  #       - Issue Ticket
  #     summary: Crate a new issue ticket with the proximety team for the specified user.
  #     operationId: createTicketForUser
  #     parameters:
  #       - name: userId
  #         in: path
  #         description: The internal system identifier for the user for whom a new issue ticket needs to be raised.
  #         required: true
  #         schema:
  #           type: string       
  #     requestBody:
  #       description: Details of the issue ticket that needs to be raised.
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/IssueTicket'
  #           example: {
  #                       "type": "PAYMENT",
  #                       "description": "Order confirmation failed for order# 121 but th payment was processed. Please review and resolve.",
  #                     }
  #     responses:
  #       203:
  #         description: Created
  #         content:
  #           application/json:
  #             schema:
  #                 $ref: '#/components/schemas/IssueTicket'
  #       400:
  #         description: Bad request
  #         content:
  #           application/json:
  #             schema:
  #                 $ref: '#/components/schemas/GlobalException'
  #       401: 
  #         description: User not found
  #       403:
  #         description: Unauthorized access   
components:
  schemas:
    PhoneNumberUpdateRequest:
      type: object
      description: The request for updating a user's phone number.
      properties:
        phoneNumber: 
          type: object
          description: The user's phone number.
          $ref: '#/components/schemas/PhoneNumber'
        otp:
          type: string
          description: The OTP recieved by the user that can be used to validate the phone number update request.
          example: 089129
    PhoneNumberUpdateResponse:
      type: object
      description: The response for the phone number update request call.
      properties:
        phoneNumber: 
          type: object
          description: The user's updated phone number.
          $ref: '#/components/schemas/PhoneNumber'
        links:
          type: array
          items: 
            $ref: '#/components/schemas/Link'
    GlobalException:
      type: object
      description: An exception thrown by the system.
      properties:
        status:
          type: integer
          description: The status code for the error.
          example: 401
        type:
          type: string
          description: The type name for the error being thrown.
          example: UNAUTHORIZED
        title:
          type: string
          description: The error title.
          example: Token expired.
        detail:
          type: string
          description: The details of the error being thrown.
          example: The access token has expired for the user. Please generate a new token and try again.
        tags:
          type: array
          description: The varios tags associated with the error that provides additional information about the error.
          items: 
            type: string
            example: ACCESS_TOKEN_INVALID  
    RefreshTokenRequest:
      type: object
      properties:
        refreshToken: 
          type: string
          description: The refresh token based on which the new authentication token needs to be generated.
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ1bV9hY2N
    GoogleLoginRequest:
      type: object
      properties:
        googleIdToken:
          type: string
          description: The google id token recieved on signing in with google.
          example: eepadifmaifdmalli222nmfo==
    FacebookLoginRequest:
      type: object
      properties:
        userAccessToken:
          type: string
          description: The user access token recieved on signing in with facebook.
          example: eepadifmaifdmalli222nmfo==
    OTPLoginRequest:
      type: object
      properties:
        phoneNumber:
          description: The phone number to which the OTP was sent.
          $ref: '#/components/schemas/PhoneNumber'
        otp: 
         type: string
         description: The OTP recieved by the user to the specified mobile number on initiating an OTP generation request.
         example: 829142
    AuthTokenResponse:
      type: object
      properties:
        userHandle:
          type: string
          description: The internal system identifier for the user logged into the system.
          example: ee12jdskdfjhalss==
        accessToken:
          type: string
          description: The token generated after authentication which needs to be passed in all subsequent calls to the system.
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ1bV9hY2Nlc3MiLCJleHAiOjE2NjAyODE5
        accessTokenType: 
          type: string
          description: The type of access token used.
          example: Bearer
        accessTokenExpiry:
          type: string
          description: The expiry time in milliseconds for the access token. Once the token has expired, a new access token needs to be requested using the provided refresh token.
          example: 3600
        refreshToken:
          type: string
          description: The refresh token that can be used to regenerate the access token once it has expired.
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ1bV9hY2N
    PhoneNumber: 
      type: object
      properties:
        countryCode:
          type: string
          description: The country code prefix for the phone number.
          example: "+91"
        phoneNumber: 
          type: integer 
          description: The 10-digit mobile number
    OTPGenerationRequest:
      type: object
      properties:
        phone:
          type: object
          description: The details of the phone number to which the OTP needs to be sent.
          $ref: '#/components/schemas/PhoneNumber'
    OTPGenerationResponse:
      type: object
      properties:
        message:
          type: string
          description: Message response related to the OTP generation request.
          example: OTP has been successfully sent to the specified phone number.
        phoneNumber:  
          description: The 10-digit mobile number to which the OTP was sent.
          $ref: '#/components/schemas/PhoneNumber'
    DeviceMetaData:
      type: object
      properties:
        deviceName:
          type: string
          description: The tag name for the device.
          example: Chrome browser on Windows.
    User:
      type: object
      required:
        - name
        - contactInfo
        - dateOfBirth
        - gender
      properties:
        id:
          type: string
          description: The internal system identifier for the user.
          example: eahdjk14129102==
        name:
          type: object
          $ref: '#/components/schemas/Name'
        contactInfo:
          type: object
          $ref: '#/components/schemas/ContactInfo'
        dateOfBirth: 
          type: string
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
          example: "1995-05-17"
        gender:
          type: string
          enum:
            - MALE 
            - FEMALE 
            - OTHER
        profileImageUrl:
          type: string
          format: uri
          example: https://dev.proximety.io/images/21423.jpg
        links:
          type: array
          items: 
            $ref: '#/components/schemas/Link'
    Name:
      type: object
      required:
        - "lastName"
        - "firstName"
      properties:
        fullName:
          type: string
          description: The full name.
          example: Jake M Sully
        firstName:
          type: string
          description: The first name.
          example: Jake
        middleName:
          type: string
          description: The middle name.
          example: M
        lastName: 
          type: string
          description: The last name.
          example: Sully
    ContactInfo: 
      type: object
      description: The contact details.
      properties:
        phoneNumber:
          type: object
          description: The primary phone number.
          $ref: '#/components/schemas/PhoneNumber'
        primaryEmail:
          type: string
          description: The primary email id.
          example: abc@xyz.com
    Link: 
      type: object
      description: A link relationship.
      properties:
        rel:
          type: string
          example: self 
        href:
          type: string
          description: The URL link to the resource.
          example: http://dev.proximety.io/api/users/eahdjk14129102==
    IssueTicket: 
      type: object
      description: The details related to an issue ticket raised by a user.
      required:
        - type
        - description
      properties:
        id:
          type: integer
          description: The internal system identifier for the issue ticket.
          example: eejash12==
        type:
          type: string
          description: The issue type for the issue ticket raised by a user.
          enum:
            - PAYMENT
            - OTHER
        description:
          type: string
          description: The issue details specified by the user for the issue ticket.
          example: Order confirmation failed for order# 121 but th payment was processed. Please review and resolve.
        dateCreated:
          type: string
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
          example: "2022-05-17"
        status:
          type: string
          description: The current status of the issue ticket.
          enum:
            - OPEN 
            - ASSIGNED
            - CLOSED
        resolutionDetails:
          type: string
          description: The details regarding issue resolution provided by the proximety team.
          example: The payment has been reversed and deposited back to your bank account.
