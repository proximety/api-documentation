openapi: '3.0.2'
info:
  title: Movie Booking Service
  version: '1.0'
  description: Provides a set of API operations that can be used for viewing movie details and for booking movie tickets.
  license:
    name: Proximety
    url: www.proximety.io
servers:
  - url: https://app-dev.proximety.io/api
  - url: https://app-staging.proximety.io/api
  - url: https://app-patch.proximety.io/api
  - url: https://app.proximety.io/api
paths:
  /movies:
    get: 
      tags:
        - Movies
      summary: List movies
      description: API to get the list of all movies.
      operationId: getMovies
      # parameters:
      #   - name: mallId
      #     in: query
      #     description: Internal system identifier for the mall.
      #     required: true
      #     schema:
      #       type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovieSummary'
        "400":
          description: Bad request
        "403":
          description: Unauthorized access
  /movies/{id}:
    get: 
      tags:
        - Movies
      summary: Movie details
      description: Retrieves the details of a movie.
      operationId: getMovie
      parameters:
        - name: id
          in: path
          description: The internal system identifier for the movie.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/MovieDetails'
        "400":
          description: Bad request
        "403":
          description: Unauthorized access
  /movie-options/{optionId}/schedule:
    get:
      tags:
        - Movie Schedule
      summary: Movie schedule
      description: Retrieves the schedule of a given movie option.
      operationId: getSchedule
      # parameters:
      #   - name: mallId
      #     in: query
      #     description: The internal system identifier for the mall.
      #     required: true
      #     schema:
      #       type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
        "400":
          description: Bad request
        "403":
          description: Unauthorized access
  /movie-schedules/{scheduleId}/seat-layout:
    get:
      tags:
        - Movie Seating
      summary: Seating details
      description: Retrieves the seat layout of a screen.
      operationId: getSeatLayout
      parameters:
        - name: scheduleId
          in: path
          description: The internal system identifier for a movie schedule.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SeatDetails'
        "400":
          description: Bad request
        "403":
          description: Unauthorized access
  /movie-schedules/{scheduleId}/orders:
     post:
      tags:
        - Movie Orders
      summary: Create ticket order
      description: Creates a new movie ticket order for the specified schedule.
      operationId: createMovieOrder
      parameters:
        - name: scheduleId
          in: path
          description: The internal system identifier for a movie schedule.
          required: true
          schema:
            type: string
            example: 123
      requestBody:
        description: The request body creating a new movie ticket order.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketOrder'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetails'
        "400":
          description: Bad request
        "403":
          description: Unauthorized access
  /movie-orders/{orderId}:
    put:
      tags:
        - Movie Orders
      summary: Update Order
      description: Updates the details of a movie ticket order.
      operationId: updateOrder
      parameters:
        - name: orderId
          in: path
          description: The internal system identifier of an order.
          required: true
          schema:
            type: string
            example: 12ed432
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetails'
        "400":
          description: Bad request
        "403":
          description: Unauthorized access
    get:
      tags:
        - Movie Orders
      summary: Retrieves the details of an order.
      operationId: orderDetails
      parameters:
        - name: orderId
          in: path
          description: The internal system identifier of an order.
          required: true
          schema:
            type: string
            example: 12ed432
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetails'
        "400":
          description: Bad request
        "403":
          description: Unauthorized access
  /movie-orders/{orderId}/payment:
    post: 
      tags:
        - Payment
      summary: Initiate payment
      description: Initiates the payment for completing a ticket order.
      deprecated: true
      parameters:
        - name: orderId
          in: path
          description: The internal system identifier for the movie ticket order.
          required: true
          schema:
            type: string
        - name: successRedirectUrl
          in: query
          required: false
          schema:
            type: string
        - name: failureRedirectUrl
          in: query
          required: false
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentInitiationResponse'
  /movie-orders/{orderId}/paymentV2:
    post: 
      tags:
        - Payment
      summary: Initiate payment(CC Avenue)
      description: Initiates the payment for completing a ticket order.
      parameters:
        - name: orderId
          in: path
          description: The internal system identifier for the movie ticket order.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentInitiationResponseV2'
  /movies/tickets:
    get: 
      tags:
        - Movies
      summary: Get movie tickets 
      description: Retrieves the details of mocie tickets that have been booked by the specified user.
      operationId: getMovieTickets     
      parameters:
        - name: userId
          in: query
          description: The internal system identifier for the user whose movie ticket bookings are to be retrieved,
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: Set this param to ACTIVE to retrieve only active tickets.
          required: false
          example: ACTIVE
          schema:
            type: string
            enum:
              - ACTIVE
      responses:
        200:
          description: Successful operation
          content:
            pplication/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketDetails' 
      
components:
  schemas:
    PaymentInitiationResponse: 
      type: object
      description: The response from initiating the payment for a movie ticket order.
      properties:
        paymentGatewayOrderId: 
          type: string
          description: The easebuzz order key which can be used for loading the payment form on UI using razorpay SDK.
          example: order_L5BydJtdpwEpFV
        paymentGatewayOrderKey: 
          type: string
          description: The easebuzz order key which can be used for loading the payment form on UI using razorpay SDK.
          example: order_L5BydJtdpwEpFV
        transactionId: 
          type: string
          description: The internal system identifier for the transaction.
          example: 76595cef-4743-461f-a5d1-4ba4bb4ae2ba
    PaymentInitiationResponseV2: 
      type: object
      description: The response from initiating the payment for a movie ticket order.
      properties:
        transactionId: 
          type: string
          description: The transaction id for the transaction.
        encryptedData: 
          type: string
          description:  The encrypted transaction data generated by your backend using the CCAvenue SDK. It includes details like order ID, amount, currency, and redirect/cancel URLs.
        accessCode: 
          type: string
          description: The access code obtained from your CCAvenue merchant account. It is used to authenticate the transaction.
          example: order_L5BydJtdpwEpFV
        merchantId: 
          type: string
          description: Your CCAvenue merchant ID, which identifies your account during the transaction.
          example: 76595cef-4743-461f-a5d1-4ba4bb4ae2ba
        successCallbackUrl: 
          type: string
          description: The callback URL to which the response needs to be posted on successful transaction.
        failureCallbackUrl: 
          type: string
          description: The callback URL to which the response needs to be posted on failed transaction.
    TicketOrder:
      type: object
      properties:       
        status:
          type: string
          description: The status of the movie ticket order.
          example: BLOCKED
          enum:
            - BLOCKED
            - CONFIRMED
        userId:
          type: string
          description: Unique id of the user.
          example: gdty6sjdkkj8sadue2
        seatIds: 
          type: array
          items:
            type: integer
            example: 21
          example: [123,412]
    MovieSummary:
      type: object
      required:
        - id
        - movieName
        - releaseDate
      properties:
        id:
          type: integer
          description: The internal system identifier for a movie.
          example: 123
        movieName:
          type: string
          description: Name of the movie.
          example: Kaduva
        genre:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
          description: Genre of the movie.  
        languages:
          type: array
          items:
            type: string
            example: Malayalam
        releaseDate:
          type: string
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
          example: "2022-05-17"
        posterUrl:
          type: string
          format: uri
          description: url of the poster
          example: https://dev.proximety.io/api/movies/eahdjk14129102==
        bookingOpen:
          type: boolean
          description: To indicate if booking is open for the movie.
        hasPremiumExperience:
          type: boolean
          description: Is premium experience available for the movie.       
    MovieDetails:
      type: object
      required:
        - movieName
      properties:
        id:
          type: integer
          description: The internal system identifier for a movie.
          example: 123
        movieName:
          type: string
          description: Name of the movie.
          example: Kaduva
        genre:
          type: array
          description: Genre of the movie.
          items:
            $ref: '#/components/schemas/Genre'
        releaseDate:
          type: string
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
          example: "2022-05-17"
        posterUrl:
          type: string
          format: uri
          description: url of the poster
          example: https://dev.proximety.io/api/movies/eahdjk14129102==
        bannerUrl:
          type: string
          format: uri
          description: url of the banner
          example: https://dev.proximety.io/api/movies/eahdjk14129102==
        trailers:
          type: array
          description: List of movie trailers.
          items:
            $ref: '#/components/schemas/Trailer'
        duration:
          type: integer
          description: Duration of the movie in minutes.
          example: 150
        overview:
          type: string
          description: Overview of the movie
        hasPremiumExperience:
          type: boolean
          description: Is premium experience available for the movie.
        options:
          type: array
          items:
            $ref: '#/components/schemas/Options'
        certificate:
          type: string
          description: Certificate of the movie
          enum:
            - U
            - A
            - U/A
        director:
          type: array
          description: Name of the director
          items:
            type: string
            example: 'Rehman'
        writer:
          type: array
          description: Name of the writer
          items:
            type: string
            example: 'Ahmed'
        cast:
          type: array
          items:
            $ref: '#/components/schemas/Cast'
    Schedule:
      type: object
      required:
        - scheduleId
        - optionId
      properties:
        scheduleId:
          type: integer
          description: The internal system identifier for the schedule.
          example: 422
        optionId:
          type: integer
          description: The internal system identifier for the movie.
          example: 123
        movieId:
          type: integer
          description: The internal system identifier for the movie in the movie database.
          example: 123
        showDate:
          type: string
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
          example: "2022-05-17"
        startTime:
          type: string
          description: Start time of the show
          example: 17:30
        saleStatus:
          type: string
          enum: 
            - SOLDOUT
            - AVAILABLE
        hasPremiumExperience:
          type: boolean
          description: Is premium experience available for the movie.
        minTicket:
          type: integer
          description: Minimum number of tickets that can be booked.
          example: 1
        maxTicket:
          type: integer
          description: Maximum number of tickets that can be booked.
          example: 7
    OrderDetails:
      type: object
      properties:
        orderId: 
          type: string
          description: Internal system identifier for order
          example: aa73819jd
        totalAmount:
          type: number
          pattern: /([0-9]*\.[0-9]{2})/
          example: 600.05
          description: Total amount in rupees for the movie ticket booking.
        tax:
          type: number
          pattern: /([0-9]*\.[0-9]{2})/
          example: 10.05
          description: Tax amount for the movie ticket booking.
        convenienceFee:
          type: number
          pattern: /([0-9]*\.[0-9]{2})/
          example: 10.05
          description: Convenience fee for the movie ticket booking.
        movieName:
          type: string
          description: Name of the movie.
          example: Kaduva
        date:
          type: string
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
          example: "2022-05-17"
        time:
          type: string
          example: "05:30 pm"
        language: 
          type: string
          example: malayalam
        3d:
          type: boolean
          example: true
        status:
          type: string
          example: BLOCKED
          enum:
            - WATCHED
            - CONFIRMED
            - BLOCKED
        seats:
          type: array
          items:
            $ref: '#/components/schemas/SeatSummary'
        qrCodeUrl:
          type: string
          description: The URL of the QR code image associated with the ticket booking.
          example: https://dev.proximety.io/images/21423.jpg
    
    Cast: 
      type: object
      properties:
        originalName: 
          type: string
          description: Name of the actor/actress
        character:
          type: string
          description: Name of the character in the movie
        profileImageUrl:
          type: string
          format: uri
          description: url of the path in which cast image is stored
    Trailer:
      type: object
      properties:
        key:
          type: string
          description: Unique identifier for the trailer video
          example: 6JnN1DmbqoU
        site:
          type: string
          description: Name of the website in which the video is available
          example: YouTube
    Genre:
      type: object
      properties:
        name:
          type: string
          example: Action
    SeatClass:
      type: object
      description: The class detaisl for a seat.
      properties:
        id: 
          type: integer
          example: 1
          description: The internal system identifier for the seat class.
        name: 
          type: string
          description: The display name for the seat class.
          example: Recliner
    SeatDetails:
      type: object
      properties:
        seatClass: 
          type: object
          $ref: "#/components/schemas/SeatClass"
        seatId:
          type: integer
          example: 1
          description: Internal system identifier for the seat.
        seatName:
          type: string
          example: A1
          description: Name of the seat.
        rowId:
          type: integer
          example: 1
          description: Internal system identifier for the seat row.
        seat:
          type: boolean
          example: true
        available:
          type: boolean
          example: true
          description: Availability of seat.
        reservationRate:
          type: number
          pattern: /([0-9]*\.[0-9]{2})/
          example: 20.05
          description: Reservation rate for the seat
        rate3d:
          type: number
          pattern: /([0-9]*\.[0-9]{2})/
          example: 30.50
          description: 3d rate for the seat
        ticketRate:
          type: number
          pattern: /([0-9]*\.[0-9]{2})/
          example: 300.05
          description: Ticket rate for the seat
    Options:
      type: object
      properties:
        language:
          type: string
          example: malayalam
        3d:
          type: boolean
        optionId:
          type: integer
          description: The internal system identifier for a movie.
          example: 1123
        premiumExperience:
          type: boolean
          description: Is premium experience available for the movie option.
    Seat:
      type: object
      properties:
        seatId:
          type: integer
          example: 1
          description: Internal system identifier for the seat.
        seatName:
          type: string
          example: A1
          description: Name of the seat.
    SeatSummary:
      type: object
      properties:
        seatName:
          type: string
          example: A1
          description: Name of the seat.
        seatClass:
          type: string
          example: Gold
          description: Class of the seat.
    TicketDetails:
      type: object
      properties:
        orderId: 
          type: string
          description: Internal system identifier for movie ticket
          example: aa73819jd
        totalAmount:
          type: number
          pattern: /([0-9]*\.[0-9]{2})/
          example: 600.05
          description: Total amountin rupees for the movie ticket booking.
        tax:
          type: number
          pattern: /([0-9]*\.[0-9]{2})/
          example: 10.05
          description: Tax amount for the movie ticket booking.
        convenienceFee:
          type: number
          pattern: /([0-9]*\.[0-9]{2})/
          example: 10.05
          description: Convenience fee for the movie ticket booking.
        movieName:
          type: string
          description: Name of the movie.
          example: Kaduva
        screenName:
          type: string
          description: Name of the screen.
          example: AUDI1
        date:
          type: string
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
          example: "2022-05-17"
        time:
          type: string
          example: "05:30 pm"
        language: 
          type: string
          example: malayalam
        3d:
          type: boolean
          example: true
        status:
          type: string
          example: BLOCKED
          enum:
            - BLOCKED
            - CONFIRMED
            - WATCHED
        seats:
          type: array
          items:
            $ref: '#/components/schemas/SeatSummary'
        qrCodeUrl:
          type: string
          description: The URL of the QR code image associated with the ticket booking.
          example: https://dev.proximety.io/images/21423.jpg
        rewardPointsEarned:
          type: number
          example: 1200
